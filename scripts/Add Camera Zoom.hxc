import funkin.modding.module.ModuleHandler;
import funkin.modding.module.Module;
import funkin.play.PlayState;
import funkin.play.event.SongEvent;
import funkin.modding.events.ScriptEvent;
import funkin.play.event.ScriptedSongEvent;
import funkin.play.character.BaseCharacter;
import funkin.play.character.CharacterDataParser;
import funkin.play.character.CharacterType;
import flixel.FlxG;
import Std;

class AddCameraZoom extends ScriptedSongEvent {
    function new() {
		super('Add Camera Zoom');
	}
	
    function handleEvent(data) {
        if (PlayState.instance == null || PlayState.instance.currentStage == null) return;
        if (PlayState.instance.isMinimalMode) return;
	}

	function getEventSchema() {
		return [
			{
                name: "value1",
                title: "Camera Zoom add",
                defaultValue: 0.015,
				step: 0.015,
                type: "float",
			},
			{
                name: "value2",
                title: "UI Zoom add",
                defaultValue: 0.03,
				step: 0.01,
                type: "float",
			}
		];
	}

	function getTitle() {
		return "Add Camera Zoom";
	}
}

class AddCameraZoomModule extends Module {
    public function new() {
		super('AddCameraZoomModule');
	}

	public override function onSongEvent(data:SongEventScriptEvent) {
        super.onSongEvent(data);
        if (PlayState.instance == null || PlayState.instance.currentStage == null) return;
        if (PlayState.instance.isMinimalMode) return;
		var props = data.eventData;
		var eventVal1 = props.value.value1;
		var eventVal2 = props.value.value2;
		if (props.eventKind == "Add Camera Zoom") {
			PlayState.instance.cameraBopMultiplier += eventVal1;
			PlayState.instance.camHUD.zoom += eventVal2;
		}
    }
}